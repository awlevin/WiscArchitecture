# Initialize registers
# R1 = 1, R2 = 0x8000, R3 = 3, R4 = 0xff00

#Upper halves
	LHB R1, 0x00
	LHB R2, 0x80
	LHB R3, 0x00
	LHB R4, 0xff	
	LHB R5, 0x12
	LHB R6, 0x56
	LHB R7, 0xC0
#Lower halves
	LLB R1, 0x01
	LLB R2, 0x00
	LLB R3, 0x03
	LLB R4, 0x00
	LLB R5, 0x34
	LLB R6, 0x78
	LLB R7, 0x00

# R1 = 0x0001 , R2 = 0x8000, R3 = 0x0003, R4 = 0xff00, R5 = 0x1234, R6 = 0x5678, R7 = 0xC000

#Alu operations with NO hazards
ADD R1,R1,R3     //R1 < 1 + 3 = 0x0004
ADD R2,R2,R3     //R2 < -32768 + 3 = 0x8003
SUB R3,R4,R6     //R3 < -256 - 22136 = 0xA888
XOR R5,R5,R4     //R5 < 0x1234 ^ 0xFF00 = 0xED34
RED R7,R6,R1     //R7 < (0x56 + 0x00) + (0x78 + 0x04) = 0xFFD2
SLL R4,R4,0x4    //R4 < 0xFF00 << 4 = 0xF000
SRA R2,R2,0xE    //R2 < 0x8003 >>> 14 = 0xFFFE
ROR R2,R5,0x8    //R2 < 0xED34 ROR 8 = 0x34ED
PADDSB R1, R1,R5 //R1 < {(0 + E) , (0 + D) , (0 + 3), (4 + 4) } 0xED37
